<?xml version="1.0"?>
<robot name="atlascar2" xmlns:xacro="http://www.ros.org/wiki/xacro">
<!--
Robot model taken from http://wiki.ros.org/pr2_mechanism/Tutorials/SImple%20URDF-Controller%20Example
-->
  <xacro:include filename="atlascar2_wheel.urdf.xacro"/>

  <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>

  <!-- Constants for robot dimensions -->
  <xacro:property name="length" value="3.475" />
  <xacro:property name="width" value="1.475" />
  <xacro:property name="height" value="1.61"/>
  <xacro:property name="wheel_radius" value="0.285" /> <!-- Link 1 -->
  <xacro:property name="thickness" value="0.145" /> <!-- Link 2 -->
<!--  we need two because the car isn't a square-->
  <xacro:property name="axel_offset_x" value="0.5" /> <!-- Space btw top of beam and the each joint -->
  <xacro:property name="axel_offset_y" value="0" /> <!-- Space btw top of beam and the each joint -->
  <xacro:property name="steer_offset" value="0.02" /> <!-- Link 1 -->

  <!-- Links: inertial,visual,collision -->
  <link name="base_link">
    <inertial>
      <!-- origin is relative -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="2"/>
      <inertia ixx="1" ixy="0" ixz="0"
               iyy="1" iyz="0"
               izz="1"/>
    </inertial>
    <visual>
      <origin xyz=" ${length/2} ${-width/2 - 0.15} ${-wheel_radius + 0.05}" rpy="0 0 ${90*deg_to_rad}"/>
      <geometry>
        <mesh filename="$(find atlascar2_description)/meshes/atlascar2_nowheels.dae"/>
      </geometry>
    </visual>
    <collision>
      <!-- origin is relative -->
      <origin xyz=" 0 0 ${-wheel_radius + 0.05 + height/2}"/>
      <geometry>
        <box size="${length} ${width} ${height}"/>
      </geometry>
    </collision>
  </link>


  <link name="base_footprint">
<!--    <visual>-->
<!--      <geometry>-->
<!--        <sphere radius="0.01"/>-->
<!--      </geometry>-->
<!--    </visual>-->
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.00000001"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
    <child link="base_link"/>
    <parent link="base_footprint"/>
  </joint>

  <!-- joints for ackermann_steering_controller -->
  <xacro:front_steer name="front" parent="base" radius="${wheel_radius}" thickness="${thickness}"
      length="${length}" width="${width}" axel_offset="${axel_offset_x}" steer_height="${wheel_radius+steer_offset}">
    <origin xyz="${length/2-axel_offset_x} 0 0" rpy="${-90 * deg_to_rad} 0 ${90 * deg_to_rad}"/>
  </xacro:front_steer>
  <xacro:rear_wheel name="rear" parent="base" radius="${wheel_radius}" thickness="${thickness}">
    <origin xyz="${-length/2+axel_offset_x} 0 0" rpy="${-90 * deg_to_rad} 0 ${-90 * deg_to_rad}"/>
  </xacro:rear_wheel>

  <!-- Wheels -->
  <xacro:front_wheel_lr name="front_right" parent="base" radius="${wheel_radius}" thickness="${thickness}"
      length="${length}" width="${width}" axel_offset="${axel_offset_x}" right_left="1" steer_height="${wheel_radius+steer_offset}">
    <origin xyz="${length/2-axel_offset_x} ${width/2+axel_offset_y} 0" rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:front_wheel_lr>
  <xacro:front_wheel_lr name="front_left" parent="base" radius="${wheel_radius}" thickness="${thickness}"
      length="${length}" width="${width}" axel_offset="${axel_offset_x}" right_left="-1" steer_height="${wheel_radius+steer_offset}">
    <origin xyz="${length/2-axel_offset_x} ${-width/2-axel_offset_y} 0" rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:front_wheel_lr>
  <xacro:rear_wheel_lr name="rear_right" parent="base" radius="${wheel_radius}" right_left="1" thickness="${thickness}">
    <origin xyz="${-length/2+axel_offset_x - 0.05} ${width/2+axel_offset_y} 0" rpy="${-90 * deg_to_rad} 0 ${-90 * deg_to_rad}"/>
  </xacro:rear_wheel_lr>
  <xacro:rear_wheel_lr name="rear_left" parent="base" radius="${wheel_radius}" right_left="-1" thickness="${thickness}">
    <origin xyz="${-length/2+axel_offset_x - 0.05} ${-width/2-axel_offset_y} 0" rpy="${-90 * deg_to_rad} 0 ${90 * deg_to_rad}"/>
  </xacro:rear_wheel_lr>

    <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotSimType>steer_bot_hardware_gazebo/SteerBotHardwareGazebo</robotSimType>
    </plugin>
  </gazebo>

  <!-- Colour -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Purple</material>
  </gazebo>

</robot>